[{"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/App.js":"1","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/Login.js":"2","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/VerifyEmail.js":"3","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/Library.js":"4","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/Post.js":"5","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/axios.js":"6","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/ProgressDetail.js":"7","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/Profile.js":"8","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/Progress.js":"9","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/reportWebVitals.js":"10","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/Founders.js":"11","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/Signup.js":"12","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/index.js":"13","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/NavBar.js":"14","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/SidebarData.js":"15","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/Home.js":"16","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/auth/PrivateRoute.js":"17","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/NavBar/header/Header.js":"18","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/auth/index.js":"19","/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/ResetPassword.js":"20"},{"size":1181,"mtime":1611863803777,"results":"21","hashOfConfig":"22"},{"size":6814,"mtime":1611866079352,"results":"23","hashOfConfig":"22"},{"size":3513,"mtime":1611859134897,"results":"24","hashOfConfig":"22"},{"size":2027,"mtime":1611742568269,"results":"25","hashOfConfig":"22"},{"size":1166,"mtime":1611859232700,"results":"26","hashOfConfig":"22"},{"size":2500,"mtime":1611866606741,"results":"27","hashOfConfig":"22"},{"size":12015,"mtime":1611858780315,"results":"28","hashOfConfig":"22"},{"size":15465,"mtime":1612197701985,"results":"29","hashOfConfig":"22"},{"size":11138,"mtime":1612156051769,"results":"30","hashOfConfig":"22"},{"size":362,"mtime":1611158172389,"results":"31","hashOfConfig":"22"},{"size":928,"mtime":1611725493344,"results":"32","hashOfConfig":"22"},{"size":5572,"mtime":1611859871374,"results":"33","hashOfConfig":"22"},{"size":580,"mtime":1611858550800,"results":"34","hashOfConfig":"22"},{"size":2586,"mtime":1611346036433,"results":"35","hashOfConfig":"22"},{"size":497,"mtime":1611725491976,"results":"36","hashOfConfig":"22"},{"size":1070,"mtime":1612034838276,"results":"37","hashOfConfig":"22"},{"size":491,"mtime":1611725494660,"results":"38","hashOfConfig":"22"},{"size":1506,"mtime":1612033616337,"results":"39","hashOfConfig":"22"},{"size":811,"mtime":1611158172381,"results":"40","hashOfConfig":"22"},{"size":4482,"mtime":1611864587663,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"k1v6yn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/App.js",[],["92","93"],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/Login.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/VerifyEmail.js",[],["94","95"],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/Library.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/Post.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/axios.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/ProgressDetail.js",[],["96","97"],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/Profile.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/pages/Progress.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/reportWebVitals.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/Founders.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/Signup.js",["98"],"import React, { useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axiosInstance from \"../../axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useToast } from \"@chakra-ui/react\";\n\nconst SignUp = () => {\n  const history = useHistory();\n\n  const toast = useToast();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      axiosInstance\n        .post(`user/create/`, {\n          email: email,\n          user_name: name,\n          password: password,\n        })\n        .then((res) => {\n          setIsLoading(false);\n          toast({\n            position: \"top\",\n            title: \"Message\",\n            description: \"We have send you the verification email\",\n            status: \"info\",\n            duration: 5000,\n            isClosable: true,\n          });\n          history.push(\"/login\");\n        })\n        .catch((res) => {\n          console.log(\"res\", res.response);\n          setIsLoading(false);\n          toast({\n            position: \"top\",\n            title: \"Message\",\n            description: res.response.data.message,\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n          });\n        });\n    } catch (error) {\n      setIsLoading(false);\n      toast({\n        position: \"top\",\n        title: \"Message\",\n        description: error,\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const LoginForm = () => {\n    return (\n      <Box my={8} textAlign=\"center\">\n        <form>\n          <FormControl>\n            <FormLabel>Full Name</FormLabel>\n            <Input\n              type=\"text\"\n              placeholder=\"\"\n              required\n              onChange={(e) => setName(e.currentTarget.value)}\n            />\n          </FormControl>\n          <FormControl mt={4}>\n            <FormLabel>Email</FormLabel>\n            <Input\n              type=\"email\"\n              placeholder=\"\"\n              required\n              onChange={(e) => setEmail(e.currentTarget.value)}\n            />\n          </FormControl>\n          <div className=\"form__password\">\n            <div>\n              <FormControl mt={4}>\n                <FormLabel>Password</FormLabel>\n                <Input\n                  type=\"password\"\n                  placeholder=\"\"\n                  required\n                  onChange={(e) => setPassword(e.currentTarget.value)}\n                />\n              </FormControl>\n            </div>\n            <div>\n              <FormControl mt={4}>\n                <FormLabel>Confirm Password</FormLabel>\n                <Input\n                  type=\"password\"\n                  required\n                  placeholder=\"\"\n                  onChange={(e) => setPassword(e.currentTarget.value)}\n                />\n              </FormControl>\n            </div>\n          </div>\n\n          <Button colorScheme=\"blue\" width=\"full\" mt={4} onClick={handleSubmit}>\n            Sign Up\n          </Button>\n          <br />\n\n          <Button\n            colorScheme=\"white\"\n            mt={2}\n            color=\"black\"\n            width=\"full\"\n            boxShadow=\"lg\"\n          >\n            Continue With Google\n          </Button>\n        </form>\n      </Box>\n    );\n  };\n\n  return isLoading ? (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"60%\",\n        margin: \"30px auto\",\n        height: \"90vh\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Spinner\n        thickness=\"4px\"\n        speed=\"0.65s\"\n        emptyColor=\"gray.200\"\n        color=\"blue.500\"\n        size=\"xl\"\n      />\n      <h1 style={{ fontFamily: \"Mosk\", fontSize: \"40px\", marginTop: \"30px\" }}>\n        Loading .....\n      </h1>\n    </div>\n  ) : (\n    <div className=\"main__signin\">\n      <Flex\n        minHeight=\"100vh\"\n        width=\"full\"\n        align=\"center\"\n        justifyContent=\"center\"\n      >\n        <Box\n          borderWidth={1}\n          px={10}\n          py={5}\n          width=\"full\"\n          maxWidth=\"900px\"\n          textAlign=\"center\"\n          boxShadow=\"xl\"\n        >\n          <Flex justifyContent=\"space-around\" alignItems=\"center\">\n            <Box p={4}>\n              <img\n                alt=\"logo\"\n                src=\"https://global-uploads.webflow.com/5f3c09d8572b1a3453aa9c1f/5faac65b405f8d172ef75b8e_Sparklehood%20logo%20grey%20login%20page-p-500.png\"\n              />\n              <LoginHeader />\n              {LoginForm()}\n            </Box>\n            <div className=\"login__image\">\n              <Box>\n                <img\n                  alt=\"logo\"\n                  src=\"https://global-uploads.webflow.com/5f3c09d8572b1a3453aa9c1f/5faab7a66dfdec1ed6d2ecca_Sparklehood%20platform%20login%20page-p-500.png\"\n                />\n              </Box>\n            </div>\n          </Flex>\n        </Box>\n      </Flex>\n    </div>\n  );\n};\n\nconst LoginHeader = () => {\n  return (\n    <div>\n      <Stack isInline justifyContent=\"space-between\" mt={4}></Stack>\n      <Box textAlign=\"left\">\n        <p style={{ fontSize: \"30px\", fontWeight: \"500\" }}>\n          Get Started with your account in sparklehood\n        </p>\n      </Box>\n    </div>\n  );\n};\n\nexport default SignUp;\n",["99","100"],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/index.js",[],["101","102"],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/NavBar.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/Founder/nav/SidebarData.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/Home.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/auth/PrivateRoute.js",[],["103","104"],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/NavBar/header/Header.js",[],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/auth/index.js",[],["105","106"],"/home/nilesh/Desktop/Sparklehood-Website/sparklehood_frontend/src/components/MainPage/ResetPassword.js",["107","108"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Flex,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  Spinner,\n} from \"@chakra-ui/react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport axiosInstance from \"../../axios\";\nimport \"./style.css\";\nimport { useToast } from \"@chakra-ui/react\";\n\nconst Login = (props) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [valid, setValid] = useState(false);\n  const toast = useToast();\n\n  const verification_token = props.match.params.token;\n  const uidb = props.match.params.uid;\n\n  console.log(props.match);\n  console.log(verification_token, uidb);\n\n  useEffect(() => {\n    try {\n      setIsLoading(true);\n      axiosInstance\n        .get(`user/password-reset/${uidb}/${verification_token}`)\n        .then((res) => {\n          console.log(\"res\", res);\n          setIsLoading(false);\n          setValid(true);\n        })\n        .catch((err) => {\n          setIsLoading(false);\n          setValid(false);\n          console.log(\"err\", err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [verification_token, uidb]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    try {\n      setIsLoading(true);\n      axiosInstance\n        .patch(`user/password-reset-complete`, {\n          password: password,\n          token: verification_token,\n          uidb64: uidb,\n        })\n        .then((res) => {\n          setIsLoading(false);\n\n          history.push(\"/login\");\n          toast({\n            position: \"top\",\n            title: \"Message\",\n            description: \"password reset successfull\",\n            status: \"info\",\n            duration: 5000,\n            isClosable: true,\n          });\n        })\n        .catch((err) => {\n          setIsLoading(false);\n          toast({\n            position: \"top\",\n            title: \"Message\",\n            description: \"error occured\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n          });\n        });\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n      alert(error);\n    }\n  };\n\n  const LoginForm = () => {\n    return (\n      <Box my={10} textAlign=\"left\">\n        <form>\n          <FormControl>\n            <FormLabel>Set new password</FormLabel>\n            <Input\n              type=\"email\"\n              placeholder=\"Enter Your email address\"\n              onChange={(e) => setPassword(e.currentTarget.value)}\n            />\n          </FormControl>\n          <FormControl mt={4}>\n            <FormLabel>Confirm new password</FormLabel>\n            <Input\n              type=\"password\"\n              placeholder=\"Enter Your Password\"\n              onChange={(e) => setConfirmPassword(e.currentTarget.value)}\n            />\n          </FormControl>\n\n          <Button colorScheme=\"blue\" width=\"full\" mt={4} onClick={handleSubmit}>\n            Submit\n          </Button>\n        </form>\n      </Box>\n    );\n  };\n\n  return isLoading ? (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"60%\",\n        margin: \"30px auto\",\n        height: \"90vh\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Spinner\n        thickness=\"4px\"\n        speed=\"0.65s\"\n        emptyColor=\"gray.200\"\n        color=\"blue.500\"\n        size=\"xl\"\n      />\n      <h1 style={{ fontFamily: \"Mosk\", fontSize: \"40px\", marginTop: \"30px\" }}>\n        Loading .....\n      </h1>\n    </div>\n  ) : (\n    <div className=\"main__login\">\n      <Flex\n        minHeight=\"100vh\"\n        width=\"full\"\n        align=\"center\"\n        justifyContent=\"center\"\n      >\n        <Box\n          borderWidth={1}\n          px={10}\n          py={8}\n          width=\"full\"\n          maxWidth=\"900px\"\n          textAlign=\"center\"\n          boxShadow=\"xl\"\n        >\n          <Flex justifyContent=\"space-around\" alignItems=\"center\">\n            <Box p={4}>\n              <LoginHeader />\n              {LoginForm()}\n            </Box>\n          </Flex>\n        </Box>\n      </Flex>\n    </div>\n  );\n};\n\nconst LoginHeader = () => {\n  return (\n    <Box textAlign=\"center\">\n      <Heading mt={4} fontWeight=\"500\" fontFamily=\"Mosk\" fontSize=\"50px\">\n        Reset your password\n      </Heading>\n    </Box>\n  );\n};\n\nexport default Login;\n",["109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"111","replacedBy":"117"},{"ruleId":"113","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":5,"column":3,"nodeType":"121","messageId":"122","endLine":5,"endColumn":10},{"ruleId":"111","replacedBy":"123"},{"ruleId":"113","replacedBy":"124"},{"ruleId":"111","replacedBy":"125"},{"ruleId":"113","replacedBy":"126"},{"ruleId":"111","replacedBy":"127"},{"ruleId":"113","replacedBy":"128"},{"ruleId":"111","replacedBy":"129"},{"ruleId":"113","replacedBy":"130"},{"ruleId":"119","severity":1,"message":"131","line":21,"column":10,"nodeType":"121","messageId":"122","endLine":21,"endColumn":25},{"ruleId":"119","severity":1,"message":"132","line":23,"column":10,"nodeType":"121","messageId":"122","endLine":23,"endColumn":15},{"ruleId":"111","replacedBy":"133"},{"ruleId":"113","replacedBy":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],["135"],["136"],"no-unused-vars","'Heading' is defined but never used.","Identifier","unusedVar",["135"],["136"],["135"],["136"],["135"],["136"],["135"],["136"],"'confirmPassword' is assigned a value but never used.","'valid' is assigned a value but never used.",["135"],["136"],"no-global-assign","no-unsafe-negation"]