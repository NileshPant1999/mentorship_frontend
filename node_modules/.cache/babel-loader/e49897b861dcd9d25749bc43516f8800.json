{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/nilesh/sparklehood/Sparklhood/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/nilesh/sparklehood/Sparklhood/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/nilesh/sparklehood/Sparklhood/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button,Spinner,Stack}from\"@chakra-ui/react\";import{Checkbox,CheckboxGroup}from\"@chakra-ui/react\";import axios from\"axios\";import React,{useEffect,useState}from\"react\";import{isAuthenticated}from\"../../../../auth\";import axiosInstance from\"../../../../axios\";function Progress(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),date=_useState4[0],setDate=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),startDate=_useState6[0],setStartDate=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),endDate=_useState8[0],setEndDate=_useState8[1];var _useState9=useState({loading:\"false\",data:null}),_useState10=_slicedToArray(_useState9,2),progress=_useState10[0],setProgress=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),updated=_useState12[0],setUpdated=_useState12[1];var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var newDate=new Date();var currentNewDate=parseInt(newDate.getDate());var currentMonth=months[newDate.getMonth()];var currentYear=newDate.getFullYear();console.log(currentMonth);useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setIsLoading(true);_context.next=4;return axiosInstance.get(\"founder/progress/\".concat(isAuthenticated().user_id,\"/\")).then(function(res){setIsLoading(false);var allProgress=res.data;console.log(\"all\",allProgress);setProgress({load:\"true\",data:allProgress});var date=res.data[0].end_date;var resp=date.split(\"-\");setDate(resp[2]);});case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);})),[setProgress,updated]);var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setIsLoading(true);_context2.prev=1;_context2.next=4;return axiosInstance.post(\"founder/add/\",{founder_id:isAuthenticated().user_id,slug:parseInt(Math.random()*1000000)}).then(function(res){setIsLoading(false);setUpdated(!updated);});case 4:_context2.next=9;break;case 6:_context2.prev=6;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0);case 9:case\"end\":return _context2.stop();}}},_callee2,null,[[1,6]]);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return progress.loading||isLoading?/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",width:\"60%\",margin:\"30px auto\",height:\"80vh\",textAlign:\"center\",justifyContent:\"center\",alignItems:\"center\"},children:/*#__PURE__*/_jsx(Spinner,{thickness:\"4px\",speed:\"0.65s\",emptyColor:\"gray.200\",color:\"blue.500\",size:\"xl\"})}):/*#__PURE__*/_jsxs(\"div\",{className:\"progress__maintab\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"30px 50px 20px 0\",display:\"flex\",justifyContent:\"space-around\",textAlign:\"center\",alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{fontSize:\"35px\"},children:\"Weekely Update\"}),/*#__PURE__*/_jsx(\"div\",{className:date>=currentNewDate?\"disable\":\"enable\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button_progress\",onClick:handleSubmit,children:\"Add Progress\"})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:\"white\",display:'flex',justifyContent:\"space-around\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'white',width:'50%'},children:/*#__PURE__*/_jsx(\"div\",{children:progress.data.map(function(res){return/*#__PURE__*/_jsxs(\"div\",{className:\"progress__main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress__date\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\".concat(currentMonth,\" \").concat(res.start_date.split(\"-\")[2],\" - \").concat(currentMonth,\" \").concat(res.end_date.split(\"-\")[2],\", \").concat(currentYear)}),/*#__PURE__*/_jsx(\"a\",{href:\"details/\".concat(res.slug),_blank:\"true\",children:\"Edit\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress__data\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-around\",textAlign:\"center\",paddingBottom:\"10px\",fontWeight:\"800\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"WTL\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Morale\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Users talked to\"})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"space-around\",textAlign:\"center\",paddingTop:\"10px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"WTL\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Morale\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Users talked to\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress__goals\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Goals (0/\".concat(res.goals.length,\")\")}),/*#__PURE__*/_jsx(Stack,{pl:6,mt:1,spacing:1,children:res.goals.map(function(goal){return/*#__PURE__*/_jsx(Checkbox,{children:goal});})})]})]});})})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'40px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"450px\",height:'300px',border:'1px solid black',textAlign:\"center\",borderRadius:'10px'},children:/*#__PURE__*/_jsx(\"h1\",{children:\"Graph 1\"})}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"450px\",height:'300px',border:'1px solid black',marginTop:'30px',textAlign:'center',borderRadius:'10px'},children:/*#__PURE__*/_jsx(\"h1\",{children:\"Graph 2\"})})]})]})]});}export default Progress;","map":{"version":3,"sources":["/home/nilesh/sparklehood/Sparklhood/frontend/src/components/Founder/nav/pages/Progress.js"],"names":["Button","Spinner","Stack","Checkbox","CheckboxGroup","axios","React","useEffect","useState","isAuthenticated","axiosInstance","Progress","props","isLoading","setIsLoading","date","setDate","startDate","setStartDate","endDate","setEndDate","loading","data","progress","setProgress","updated","setUpdated","months","newDate","Date","currentNewDate","parseInt","getDate","currentMonth","getMonth","currentYear","getFullYear","console","log","get","user_id","then","res","allProgress","load","end_date","resp","split","handleSubmit","e","post","founder_id","slug","Math","random","display","width","margin","height","textAlign","justifyContent","alignItems","padding","fontSize","backgroundColor","map","start_date","paddingBottom","fontWeight","paddingTop","goals","length","goal","marginTop","border","borderRadius"],"mappings":"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","sourcesContent":["import { Button, Spinner, Stack } from \"@chakra-ui/react\";\nimport { Checkbox, CheckboxGroup } from \"@chakra-ui/react\";\nimport axios from \"axios\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { isAuthenticated } from \"../../../../auth\";\nimport axiosInstance from \"../../../../axios\";\n\nfunction Progress(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [date, setDate] = useState();\n  const [startDate, setStartDate] = useState()\n  const [endDate, setEndDate] = useState()\n  const [progress, setProgress] = useState({ loading: \"false\", data: null });\n  const [updated, setUpdated] = useState(false);\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n  const newDate = new Date();\n  const currentNewDate = parseInt(newDate.getDate());\n  const currentMonth = months[newDate.getMonth()]\n  const currentYear = newDate.getFullYear()\n\n  console.log(currentMonth)\n  useEffect(async () => {\n    try {\n      setIsLoading(true);\n      await axiosInstance\n        .get(`founder/progress/${isAuthenticated().user_id}/`)\n        .then((res) => {\n          setIsLoading(false);\n          const allProgress = res.data;\n          console.log(\"all\", allProgress);\n          setProgress({ load: \"true\", data: allProgress });\n          const date = res.data[0].end_date;\n          const resp = date.split(\"-\");\n          setDate(resp[2]);\n        });\n    } catch (error) {\n      console.log(error)\n    }\n   \n  }, [setProgress, updated]);\n\n  const handleSubmit = async (e) => {\n    setIsLoading(true);\n    try {\n      await axiosInstance\n        .post(`founder/add/`, {\n          founder_id: isAuthenticated().user_id,\n          slug: parseInt(Math.random() * 1000000),\n        })\n        .then((res) => {\n          setIsLoading(false);\n          setUpdated(!updated);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return progress.loading || isLoading ? (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"60%\",\n        margin: \"30px auto\",\n        height: \"80vh\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Spinner\n        thickness=\"4px\"\n        speed=\"0.65s\"\n        emptyColor=\"gray.200\"\n        color=\"blue.500\"\n        size=\"xl\"\n      />\n    </div>\n  ) : (\n    <div className='progress__maintab'>\n      <div\n        style={{\n          padding: \"30px 50px 20px 0\",\n          display: \"flex\",\n          justifyContent: \"space-around\",\n          textAlign: \"center\",\n          alignItems:'center'\n        }}\n      >\n        <h1 style={{ fontSize: \"35px\" }}>Weekely Update</h1>\n        <div className={date >= currentNewDate ? \"disable\" : \"enable\"}>\n          <button className='button_progress' onClick={handleSubmit}>Add Progress</button>\n        </div>\n      </div>\n      <div style={{ backgroundColor: \"white\", display:'flex', justifyContent:\"space-around\"}}>\n      <div style={{backgroundColor:'white', width:'50%'}}>\n      <div>\n        {progress.data.map((res) => {\n          return (\n            <div className='progress__main'>\n              <div className=\"progress__date\">\n                <h1>{`${currentMonth} ${res.start_date.split(\"-\")[2]} - ${currentMonth} ${res.end_date.split(\"-\")[2]}, ${currentYear}`}</h1>\n                <a href={`details/${res.slug}`} _blank=\"true\">\n                  Edit\n                </a>\n              </div>\n              <div className=\"progress__data\">\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    textAlign: \"center\",\n                    paddingBottom: \"10px\",\n                    fontWeight: \"800\",\n                  }}\n                >\n                  <h1>WTL</h1>\n                  <h1>Morale</h1>\n                  <h1>Users talked to</h1>\n                </div>\n                <hr />\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    textAlign: \"center\",\n                    paddingTop: \"10px\",\n                  }}\n                >\n                  <h1>WTL</h1>\n                  <h1>Morale</h1>\n                  <h1>Users talked to</h1>\n                </div>\n              </div>\n              <div className=\"progress__goals\">\n                <h1>{`Goals (0/${res.goals.length})`}</h1>\n                <Stack pl={6} mt={1} spacing={1}>\n                  {res.goals.map((goal) => {\n                    return (\n                    <Checkbox>{goal}</Checkbox>\n                    )\n                  })}\n                </Stack>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      </div>\n      <div style={{marginTop:'40px'}}>\n       <div style={{width:\"450px\", height:'300px', border:'1px solid black', textAlign:\"center\",borderRadius:'10px'}}>\n         <h1>Graph 1</h1>\n       </div>\n       <div style={{width:\"450px\", height:'300px', border:'1px solid black', marginTop:'30px', textAlign:'center',borderRadius:'10px'}}>\n         <h1>Graph 2</h1>\n       </div>\n      </div>\n      \n    </div>\n    </div>\n  );\n}\n\nexport default Progress;\n"]},"metadata":{},"sourceType":"module"}