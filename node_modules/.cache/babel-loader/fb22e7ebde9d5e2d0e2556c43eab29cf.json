{"ast":null,"code":"import _regeneratorRuntime from\"/home/nilesh/sparklehood/Sparklhood/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/nilesh/sparklehood/Sparklhood/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";//const baseURL = \"https://sparklehood.herokuapp.com/api/\";\nvar baseURL=\"http://127.0.0.1:8000/api/\";var axiosInstance=axios.create({baseURL:baseURL,timeout:5000,headers:{Authorization:localStorage.getItem(\"access_token\")?\"JWT \"+localStorage.getItem(\"access_token\"):null,\"Content-Type\":\"application/json\",accept:\"application/json\"}});axiosInstance.interceptors.response.use(function(response){return response;},/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(error){var originalRequest,refreshToken,tokenParts,now;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:originalRequest=error.config;if(!(typeof error.response===\"undefined\")){_context.next=3;break;}return _context.abrupt(\"return\",Promise.reject(error));case 3:if(!(error.response.status===401&&originalRequest.url===baseURL+\"token/refresh/\")){_context.next=6;break;}window.location.href=\"/login/\";return _context.abrupt(\"return\",Promise.reject(error));case 6:if(!(error.response.data.code===\"token_not_valid\"&&error.response.status===401&&error.response.statusText===\"Unauthorized\")){_context.next=22;break;}refreshToken=localStorage.getItem(\"refresh_token\");if(!refreshToken){_context.next=20;break;}tokenParts=JSON.parse(atob(refreshToken.split(\".\")[1]));// exp date in token is expressed in seconds, while now() returns milliseconds:\nnow=Math.ceil(Date.now()/1000);console.log(tokenParts.exp);if(!(tokenParts.exp>now)){_context.next=16;break;}return _context.abrupt(\"return\",axiosInstance.post(\"/token/refresh/\",{refresh:refreshToken}).then(function(response){localStorage.setItem(\"access_token\",response.data.access);localStorage.setItem(\"refresh_token\",response.data.refresh);axiosInstance.defaults.headers[\"Authorization\"]=\"JWT \"+response.data.access;originalRequest.headers[\"Authorization\"]=\"JWT \"+response.data.access;return axiosInstance(originalRequest);}).catch(function(err){console.log(err);}));case 16:console.log(\"Refresh token is expired\",tokenParts.exp,now);window.location.href=\"/login/\";case 18:_context.next=22;break;case 20:console.log(\"Refresh token not available.\");window.location.href=\"/login/\";case 22:return _context.abrupt(\"return\",Promise.reject(error));case 23:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export default axiosInstance;","map":{"version":3,"sources":["/home/nilesh/sparklehood/Sparklhood/frontend/src/axios.js"],"names":["axios","baseURL","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","catch","err"],"mappings":"mUAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,GAAMC,CAAAA,OAAO,CAAG,4BAAhB,CAEA,GAAMC,CAAAA,aAAa,CAAGF,KAAK,CAACG,MAAN,CAAa,CACjCF,OAAO,CAAEA,OADwB,CAEjCG,OAAO,CAAE,IAFwB,CAGjCC,OAAO,CAAE,CACPC,aAAa,CAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,EACX,OAASD,YAAY,CAACC,OAAb,CAAqB,cAArB,CADE,CAEX,IAHG,CAIP,eAAgB,kBAJT,CAKPC,MAAM,CAAE,kBALD,CAHwB,CAAb,CAAtB,CAYAP,aAAa,CAACQ,YAAd,CAA2BC,QAA3B,CAAoCC,GAApC,CACE,SAACD,QAAD,CAAc,CACZ,MAAOA,CAAAA,QAAP,CACD,CAHH,0FAIE,iBAAgBE,KAAhB,kKACQC,eADR,CAC0BD,KAAK,CAACE,MADhC,MAGM,MAAOF,CAAAA,KAAK,CAACF,QAAb,GAA0B,WAHhC,0DAIWK,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAJX,cAQIA,KAAK,CAACF,QAAN,CAAeO,MAAf,GAA0B,GAA1B,EACAJ,eAAe,CAACK,GAAhB,GAAwBlB,OAAO,CAAG,gBATtC,0BAWImB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,SAAvB,CAXJ,gCAYWN,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAZX,cAgBIA,KAAK,CAACF,QAAN,CAAeY,IAAf,CAAoBC,IAApB,GAA6B,iBAA7B,EACAX,KAAK,CAACF,QAAN,CAAeO,MAAf,GAA0B,GAD1B,EAEAL,KAAK,CAACF,QAAN,CAAec,UAAf,GAA8B,cAlBlC,2BAoBUC,YApBV,CAoByBnB,YAAY,CAACC,OAAb,CAAqB,eAArB,CApBzB,KAsBQkB,YAtBR,0BAuBYC,UAvBZ,CAuByBC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,YAAY,CAACK,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAD,CAAf,CAvBzB,CAyBM;AACMC,GA1BZ,CA0BkBC,IAAI,CAACC,IAAL,CAAUC,IAAI,CAACH,GAAL,GAAa,IAAvB,CA1BlB,CA2BMI,OAAO,CAACC,GAAR,CAAYV,UAAU,CAACW,GAAvB,EA3BN,KA6BUX,UAAU,CAACW,GAAX,CAAiBN,GA7B3B,2DA8Be9B,aAAa,CACjBqC,IADI,CACC,iBADD,CACoB,CACvBC,OAAO,CAAEd,YADc,CADpB,EAIJe,IAJI,CAIC,SAAC9B,QAAD,CAAc,CAClBJ,YAAY,CAACmC,OAAb,CAAqB,cAArB,CAAqC/B,QAAQ,CAACY,IAAT,CAAcoB,MAAnD,EACApC,YAAY,CAACmC,OAAb,CAAqB,eAArB,CAAsC/B,QAAQ,CAACY,IAAT,CAAciB,OAApD,EAEAtC,aAAa,CAAC0C,QAAd,CAAuBvC,OAAvB,CAA+B,eAA/B,EACE,OAASM,QAAQ,CAACY,IAAT,CAAcoB,MADzB,CAEA7B,eAAe,CAACT,OAAhB,CAAwB,eAAxB,EACE,OAASM,QAAQ,CAACY,IAAT,CAAcoB,MADzB,CAGA,MAAOzC,CAAAA,aAAa,CAACY,eAAD,CAApB,CACD,CAdI,EAeJ+B,KAfI,CAeE,SAACC,GAAD,CAAS,CACdV,OAAO,CAACC,GAAR,CAAYS,GAAZ,EACD,CAjBI,CA9Bf,UAiDQV,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCV,UAAU,CAACW,GAAnD,CAAwDN,GAAxD,EACAZ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,SAAvB,CAlDR,uCAqDMc,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACAjB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,SAAvB,CAtDN,wCA2DSN,OAAO,CAACC,MAAR,CAAeJ,KAAf,CA3DT,yDAJF,gEAmEA,cAAeX,CAAAA,aAAf","sourcesContent":["import axios from \"axios\";\n//const baseURL = \"https://sparklehood.herokuapp.com/api/\";\nconst baseURL = \"http://127.0.0.1:8000/api/\";\n\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem(\"access_token\")\n      ? \"JWT \" + localStorage.getItem(\"access_token\")\n      : null,\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\",\n  },\n});\n\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  async function (error) {\n    const originalRequest = error.config;\n\n    if (typeof error.response === \"undefined\") {\n      return Promise.reject(error);\n    }\n\n    if (\n      error.response.status === 401 &&\n      originalRequest.url === baseURL + \"token/refresh/\"\n    ) {\n      window.location.href = \"/login/\";\n      return Promise.reject(error);\n    }\n\n    if (\n      error.response.data.code === \"token_not_valid\" &&\n      error.response.status === 401 &&\n      error.response.statusText === \"Unauthorized\"\n    ) {\n      const refreshToken = localStorage.getItem(\"refresh_token\");\n\n      if (refreshToken) {\n        const tokenParts = JSON.parse(atob(refreshToken.split(\".\")[1]));\n\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\n        const now = Math.ceil(Date.now() / 1000);\n        console.log(tokenParts.exp);\n\n        if (tokenParts.exp > now) {\n          return axiosInstance\n            .post(\"/token/refresh/\", {\n              refresh: refreshToken,\n            })\n            .then((response) => {\n              localStorage.setItem(\"access_token\", response.data.access);\n              localStorage.setItem(\"refresh_token\", response.data.refresh);\n\n              axiosInstance.defaults.headers[\"Authorization\"] =\n                \"JWT \" + response.data.access;\n              originalRequest.headers[\"Authorization\"] =\n                \"JWT \" + response.data.access;\n\n              return axiosInstance(originalRequest);\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        } else {\n          console.log(\"Refresh token is expired\", tokenParts.exp, now);\n          window.location.href = \"/login/\";\n        }\n      } else {\n        console.log(\"Refresh token not available.\");\n        window.location.href = \"/login/\";\n      }\n    }\n\n    // specific error handling done elsewhere\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"]},"metadata":{},"sourceType":"module"}